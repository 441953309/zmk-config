/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <../boards/shields/corne/boards/nice_nano.overlay>

// Overwrite number of leds on the keyboard. A Corne has 27 per side.
&led_strip { chain-length = <27>; };

/ {
    behaviors {
        mth: my_tolayer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_TOLAYER_HOLD";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&kp>, <&to>;
        };

        mll: my_holdlater_tolayer {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_HOLDLAYER_TOHOLD";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&mo>, <&to>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | 3&TAB|  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  GUI |
            //                    | CTRL|  1  | SPC |   | ENT |  2   | ALT |
            bindings = <
                &kp ESC    &kp Q   &kp W   &kp E   &kp R   &kp T      &kp Y   &kp U  &kp I     &kp O   &kp P    &kp BSPC
                &lt 3 TAB  &kp A   &kp S   &kp D   &kp F   &kp G      &kp H   &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT  &kp Z   &kp X   &kp C   &kp V   &kp B      &kp N   &kp M  &kp COMMA &kp DOT &kp FSLH &kp LGUI
                                        &kp LCTRL  &mo 1   &kp SPACE  &kp RET &mo 2  &kp LALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |   `  |  !  |  @  |  #  |  $  |  %  |   |  -  |  =  |  [  |  ]  |  \  |      |
            // |   ~  |  ^  |  &  |  *  |  (  |  )  |   |  _  |  +  |  {  |  }  |  |  |  GUI |
            //                    | CTRL|     | SPC |   | ENT |     | ALT |
            bindings = <
                &kp ESC   &kp N1    &kp N2   &kp N3   &kp N4    &kp N5       &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp BSPC
                &kp GRAVE &kp EXCL  &kp AT   &kp HASH &kp DLLR  &kp PRCNT    &kp MINUS  &kp EQUAL &kp LBKT  &kp RBKT  &kp NUBS  &trans
                &kp TILDE &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR     &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE2 &kp LGUI
                                            &kp LCTRL &trans    &kp SPACE    &kp RET    &trans    &kp LALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // |   `  |  !  |  @  |  #  |  $  |  %  |   |  -  |  =  |  [  |  ]  |  \  |      |
            // |   ~  |  ^  |  &  |  *  |  (  |  )  |   |  _  |  +  |  {  |  }  |  |  |  GUI |
            //                    | CTRL|     | SPC |   | ENT |     | ALT |
            bindings = <
                &kp ESC   &kp N1    &kp N2   &kp N3   &kp N4    &kp N5       &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp BSPC
                &kp GRAVE &kp EXCL  &kp AT   &kp HASH &kp DLLR  &kp PRCNT    &kp MINUS  &kp EQUAL &kp LBKT  &kp RBKT  &kp NUBS  &trans
                &kp TILDE &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR     &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE2 &kp LGUI
                                            &kp LCTRL &trans    &kp SPACE    &kp RET    &trans    &kp LALT
            >;
        };

        config_layer {
            // -----------------------------------------------------------------------------------------
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |     |     |     |      |
            // | OUT  |     |     |     | BR+ | EFF |   |     |     |     |     |     |      |
            // |      |     |     |     | BR- | RGB |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |
            bindings = <
                &bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
                &out OUT_TOG    &trans          &trans          &trans          &rgb_ug RGB_BRI &rgb_ug RGB_EFF &trans  &trans  &trans  &trans  &trans  &trans
                &trans          &trans          &trans          &trans          &rgb_ug RGB_BRD &rgb_ug RGB_TOG &trans  &trans  &trans  &trans  &trans  &trans
                                                                &trans          &trans          &trans          &trans  &trans  &trans
            >;
        };
    };
};